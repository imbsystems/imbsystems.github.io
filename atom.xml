<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.icecome.com</id>
    <title>三无亦拾吾</title>
    <updated>2024-02-29T07:21:42.288Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.icecome.com"/>
    <link rel="self" href="https://blog.icecome.com/atom.xml"/>
    <subtitle>三无，无存款无梦想无......；亦，也；拾，捡起，收拾，整理；吾，我。</subtitle>
    <logo>https://blog.icecome.com/images/avatar.png</logo>
    <icon>https://blog.icecome.com/favicon.ico</icon>
    <rights>All rights reserved 2024, 三无亦拾吾</rights>
    <entry>
        <title type="html"><![CDATA[壬寅年寄癸卯年摆]]></title>
        <id>https://blog.icecome.com/aaZ6ZQMk/</id>
        <link href="https://blog.icecome.com/aaZ6ZQMk/">
        </link>
        <updated>2023-04-24T09:58:53.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="小记">小记</h3>
<p>转眼又是一年过去了，应该依照往常的惯例，写一篇总结。而且这篇总结该是在年后就写完，但总是拖拖拉拉，近日终于下定决心尽快写完。</p>
<p>其实，往年的总结好像都没有发布过。不，应该是说没有保存过，写完就丢弃了。</p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="小记">小记</h3>
<p>转眼又是一年过去了，应该依照往常的惯例，写一篇总结。而且这篇总结该是在年后就写完，但总是拖拖拉拉，近日终于下定决心尽快写完。</p>
<p>其实，往年的总结好像都没有发布过。不，应该是说没有保存过，写完就丢弃了。</p>
<!-- more -->
<h2 id="去年写于癸卯年元月初九">去年•写于癸卯年元月初九</h2>
<p>照例是对去年的总结，大概就是一句话。</p>
<blockquote>
<p>都没实现。</p>
</blockquote>
<p>去年年初的总结里写下的对未来的展望，基本都没实现。浑浑噩噩的又过了一年，其实我都不想写这两句话了。</p>
<p>毕竟，我是一个没什么上进的人。</p>
<p>上半年，由于办公室内暂时没有我的位置，而且考虑到疫情的反复，所以经领导允许，我都是在家办公的。依照我的贪玩性子，自然是在家玩了半年的游戏。本来定下的各项目标，一个没有完成。</p>
<p>如此过了半年，项目结束，我也没等到新项目开工就直接辞职。虽然没有后续的规划就直接裸辞，有些欠缺考量，但继续下去，我想我也不会有多么明确的想法。</p>
<p>六七八九月休息了一下，本来是想着不再休息那么久的。最初是确实没找到合适工作，后来，中秋的前一天，家里亲人去世，于是又多停顿了一段时间。直到国庆，认为不能再懒下去了，于是选定城市，出门了。</p>
<p>可能从很早就在外面学习生活的原因，其实不太希望在离家近的地方工作的。考虑到年龄相对已经大了，而且已经去过了北京、上海等地，所以考虑位置不近不远的城市。数遍沧州周边的城市，发现居然只有天津，何况天津也只有坐飞机时路过过，于是就敲定下来了。</p>
<p>找工作也是相当巧合的，本来在招聘的APP上谈了几个工作，商量着到津后面试。10月7号到津，下午没出门，还是在网上投简历。8号上午约了一个线上面试，下午又去现场面试。似乎招聘领导急招，聊了一个多小时，就敲定入职了。毕竟我是跨行找工作，也没想到还挺顺利，而工资对比工作内容，以及行业平均，也算相当。</p>
<p>更巧的是，来津先住的酒店，本来约了两个房东去看房子，没想到面试回来后，居然又发现一个位置、价格相对不错的房子，当即联系房东前往看房。现场看过虽然有些许地方不合心意，但价格便宜、又交通方便的地方能有几个呢？于是和房东签约租住。</p>
<h2 id="今年写于癸卯年三月初五">今年•写于癸卯年三月初五</h2>
<blockquote>
<p>今年也粗略地有几个想法。</p>
</blockquote>
<p>现在距离敲定上面的文字又过了近三个月，不过这几个月好像也没什么好讲的。</p>
<blockquote>
<p>学车</p>
</blockquote>
<p>值得一提的是，4月初终于报考驾校了。从大学开始提，到现在都快10年了。不过正巧赶上天津的驾考细化改革，还不知道未来有什么变化。要是3月前就直接报名就好了，就不用划到改后考生了。</p>
<p>首先，要先把驾照考下来。原来总是觉得这不是必需的，可如今却觉得好似有个驾照还是挺方便的。</p>
<p>比如北京、上海工作的时候，不是通行困难就是距离较远，确实没必要开车；后来到了沧州，城际出租也非常多，出门上车，回家下车。</p>
<p>所以说，天津对于我家来说，是一个位置很奇怪的城市。它很近，一百五十公里，开车最多两个小时；它又很远，没车的我每次都只能坐火车回家，火车的时间安排总是有些不方便。</p>
<p>所以，考个驾照先。</p>
<blockquote>
<p>买车</p>
</blockquote>
<p>其次，买一辆代步的车。</p>
<p>买车，真的是一笔很大的支出，对于现在的我来说。工作也有好多年了，基本没攒下钱。前几年回到沧州后还是留下了一点的，不过后来也支出掉了。而且工资其实也并不高，所以攒钱很难。</p>
<p>等到了年底，看看能剩下多少，在考虑吧。</p>
<h2 id="最后">最后</h2>
<p>第三，没有第三了。少点许愿，多点脚踏实地。希望明年再回头看这里的时候不会突然笑了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[迫于 Gridea 无法同步]]></title>
        <id>https://blog.icecome.com/tAac34pE/</id>
        <link href="https://blog.icecome.com/tAac34pE/">
        </link>
        <updated>2022-08-18T10:54:59.000Z</updated>
        <summary type="html"><![CDATA[<p>继上次发现 <strong>Gridea</strong> 更新版本发现能同步后，中间就更新了一篇内容。由于过于懒惰，又是好长时间没有更新。</p>
]]></summary>
        <content type="html"><![CDATA[<p>继上次发现 <strong>Gridea</strong> 更新版本发现能同步后，中间就更新了一篇内容。由于过于懒惰，又是好长时间没有更新。</p>
<!-- more -->
<p>8月的某日，本想着有些新的知识学到了，总要记录总结一下，谁知发现又无法同步了。</p>
<p>于是各种上网查询，网上有很多朋友分享了他们的问题及解决方法，可是套用到我身上不知道为什么还是不能解决。所以迫于无奈，准备废弃 <strong>GitHub Page</strong>。</p>
<p>恰巧手里有闲置的甲骨文云服务器，又是一番网上查询，选择了<strong>Typecho</strong>，搭建了新的 <s><a href="https://im.icecome.com">主页</a>（已经寄了，后来换成了halo，域名反代问题无法处理，懒得查原因）</s>。甲骨文云据说永久免费，应该能坚挺很长时间吧！</p>
<p>可是，转折了来了，就在今天！！</p>
<p>因为 <strong>GitHub Page</strong> 这个主页一直占用着 <strong>www</strong> 的域名，所以想换掉。于是想着把 <strong>Gridea</strong> 远程连接配置里的信息都更新一下，到令牌这里的时候，我去 <strong>GitHub</strong> 更新令牌，居然发现这个令牌新建的时候是可以选择时效的，默认是 30 天。我依稀记得 5 月份更新软件的时候，也是换了一次令牌。可能那次没有注意时效，所以导致过了 30 天后，因令牌时效，所以 <strong>Gridea</strong> 无法同步了吧。</p>
<p>那么，这次的问题就暂时解决了。我可真是个小机灵鬼！</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PVE 中虚拟机 Windows11 核显直通]]></title>
        <id>https://blog.icecome.com/SvHQ76z+/</id>
        <link href="https://blog.icecome.com/SvHQ76z+/">
        </link>
        <updated>2022-08-04T07:50:33.000Z</updated>
        <summary type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>之所以有这么一篇内容，是由于之前购入了一台<strong>联想910Q准系统</strong>，配齐配件后想当一个学习 <strong>All in One</strong> 的平台。因为有直通的念头，所以找遍网上的教程，学习了一番，然后再记录下来，分享给大家。</p>
]]></summary>
        <content type="html"><![CDATA[<h1 id="前言">前言</h1>
<p>之所以有这么一篇内容，是由于之前购入了一台<strong>联想910Q准系统</strong>，配齐配件后想当一个学习 <strong>All in One</strong> 的平台。因为有直通的念头，所以找遍网上的教程，学习了一番，然后再记录下来，分享给大家。</p>
<!-- more -->
<ul>
<li><a href="#%E5%89%8D%E8%A8%80">前言</a>
<ul>
<li><a href="#%E6%9B%B4%E6%96%B0%E6%BA%90">更新源</a></li>
<li><a href="#%E6%9B%BF%E6%8D%A2-apt-%E8%BD%AF%E4%BB%B6%E6%BA%90">替换 apt 软件源</a>
<ul>
<li><a href="#%E6%9B%B4%E6%96%B0%E8%AF%81%E4%B9%A6">更新证书</a></li>
<li><a href="#%E6%9B%BF%E6%8D%A2%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%BA%90">替换通用软件源</a></li>
<li><a href="#%E6%9B%BF%E6%8D%A2-pve-%E8%BD%AF%E4%BB%B6%E6%BA%90">替换 PVE 软件源</a></li>
<li><a href="#%E6%9B%B4%E6%96%B0%E8%BD%AF%E4%BB%B6">更新软件</a></li>
</ul>
</li>
<li><a href="#pve%E7%9B%B4%E9%80%9A%E6%A0%B8%E6%98%BE">PVE直通核显</a>
<ul>
<li><a href="#%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83">配置环境</a></li>
<li><a href="#%E7%A1%AC%E4%BB%B6%E5%B9%B3%E5%8F%B0%E5%8F%8A-bios-%E8%AE%BE%E7%BD%AE">硬件平台及 BIOS 设置</a>
<ul>
<li><a href="#bios%E8%AE%BE%E7%BD%AE">BIOS设置</a></li>
</ul>
</li>
<li><a href="#1pve%E7%9B%B4%E9%80%9A%E8%AE%BE%E7%BD%AE">1.PVE直通设置</a>
<ul>
<li><a href="#11-%E5%BC%80%E5%90%AF%E5%BA%95%E5%B1%82%E7%9A%84%E7%A1%AC%E4%BB%B6%E7%9B%B4%E9%80%9A%E5%8A%9F%E8%83%BD">1.1 开启底层的硬件直通功能</a></li>
<li><a href="#12-%E5%8A%A0%E8%BD%BD%E6%A8%A1%E5%9D%97">1.2 加载模块</a></li>
</ul>
</li>
<li><a href="#2%E7%A6%81%E7%94%A8pve%E7%B3%BB%E7%BB%9F%E5%8A%A0%E8%BD%BD%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8">2.禁用PVE系统加载显卡驱动</a>
<ul>
<li><a href="#21-%E6%B7%BB%E5%8A%A0%E9%BB%91%E5%90%8D%E5%8D%95">2.1 添加黑名单</a></li>
<li><a href="#22-%E6%9F%A5%E6%89%BE%E6%98%BE%E5%8D%A1%E7%9A%84%E8%AE%BE%E5%A4%87id%E5%B9%B6%E6%B7%BB%E5%8A%A0%E7%9B%B4%E9%80%9A">2.2 查找显卡的设备ID并添加直通</a></li>
<li><a href="#23-%E6%B7%BB%E5%8A%A0%E7%9B%B4%E9%80%9A%E7%BB%84">2.3 添加直通组</a></li>
<li><a href="#24-%E6%B7%BB%E5%8A%A0-options-%E9%98%B2%E6%AD%A2vm%E6%AD%BB%E6%9C%BA">2.4 添加 options 防止VM死机</a></li>
<li><a href="#25-%E6%9B%B4%E6%96%B0%E5%86%85%E6%A0%B8%E5%B9%B6%E9%87%8D%E5%90%AF-pve-%E8%99%9A%E6%8B%9F%E6%9C%BA">2.5 更新内核并重启 PVE 虚拟机</a></li>
<li><a href="#26-%E8%BE%93%E5%85%A5%E5%91%BD%E4%BB%A4%E6%A3%80%E6%9F%A5%E6%A8%A1%E5%9D%97%E6%98%AF%E5%90%A6%E5%8A%A0%E8%BD%BD%E6%88%90%E5%8A%9F">2.6 输入命令检查模块是否加载成功</a></li>
</ul>
</li>
<li><a href="#3-win%E8%99%9A%E6%8B%9F%E6%9C%BA%E8%AE%BE%E7%BD%AE">3. Win虚拟机设置</a>
<ul>
<li><a href="#31-%E6%96%B0%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA">3.1 新建虚拟机</a></li>
<li><a href="#32-%E5%AE%89%E8%A3%85%E7%B3%BB%E7%BB%9F">3.2 安装系统</a></li>
</ul>
</li>
<li><a href="#4-%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE">4. 虚拟机参数配置</a>
<ul>
<li><a href="#41">4.1</a></li>
<li><a href="#42-%E6%B7%BB%E5%8A%A0%E7%9B%B4%E9%80%9A-pci-%E8%AE%BE%E5%A4%87">4.2 添加直通 <strong>PCI</strong> 设备</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#end">End.</a></li>
</ul>
</li>
</ul>
<h3 id="更新源">更新源</h3>
<p>由于我是新装的 <strong>PVE</strong>，<strong>PVE7</strong> 安装后默认配置的 <em><strong>apt</strong></em> 软件源是官方默认的，国内使用性能不佳，所以先更新一下软件源，这里我替换为了清华 <strong>Tuna</strong> 提供的国内镜像源，速度是有一个较大的提升。</p>
<h3 id="替换-apt-软件源">替换 apt 软件源</h3>
<h4 id="更新证书">更新证书</h4>
<p>先更新一下证书，否则可能由于证书不可用导致 https 无法使用，进而无法下载所有软件。</p>
<pre><code>apt install apt-transport-https ca-certificates
</code></pre>
<p>由于我是直接在PVE的 root 账户上操作的，所以不需要提权，如果你是使用其他账户操作，可能需要先提权后在执行上述命令，以下均默认 root 账户操作。</p>
<h4 id="替换通用软件源">替换通用软件源</h4>
<p>首先替换通用软件源， <strong>PVE</strong>是基于 <strong>Debian</strong> 的 <strong>Linux</strong> 系统，而 <strong>Debian</strong> 的软件源配置文件是 <code>/etc/apt/sources.list</code>，备份后将其中内容修改为以下即可：</p>
<p>先备份，</p>
<pre><code>mv /etc/apt/sources.list /etc/apt/sources.list.bak
</code></pre>
<p>新建并编辑，</p>
<pre><code>vim /etc/apt/sources.list
</code></pre>
<p>复制下面的内容，并保存。</p>
<pre><code># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free

deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free

deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free
</code></pre>
<h4 id="替换-pve-软件源">替换 PVE 软件源</h4>
<p>之后替换 <strong>PVE</strong> 软件源，<strong>PVE</strong> 镜像默认的 <strong>PVE</strong> 软件源配置文件是 <code>/etc/apt/sources.list.d/pve-enterprise.list</code> ，备份后将其中内容替换为以下即可：</p>
<p>先备份，</p>
<pre><code>mv /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.bak
</code></pre>
<p>新建并编辑，</p>
<pre><code>vim /etc/apt/sources.list.d/pve-enterprise.list
</code></pre>
<p>复制下面的内容，并保存。</p>
<pre><code>deb https://mirrors.tuna.tsinghua.edu.cn/proxmox/debian bullseye pve-no-subscription
</code></pre>
<h4 id="更新软件">更新软件</h4>
<p>最后更新下，</p>
<pre><code>apt update &amp;&amp; apt upgrade -y
</code></pre>
<h3 id="pve直通核显">PVE直通核显</h3>
<h4 id="配置环境">配置环境</h4>
<ul>
<li><strong>PVE</strong> 版本：PVE 7.2-7</li>
<li>关键软件包版本：pve-qemu-kvm=6.1.1-2</li>
<li>虚拟机 Windows11 版本：zh-cn_windows_11_21H2_VOL_x64</li>
</ul>
<p>此处参考教程直通了 <strong>NVME</strong> 固态硬盘，将 <strong>pve-qemu-kvm</strong> 由 6.2.0-10 降级至 6.1.1-2，因为我后来并未直通硬盘，所以较新版本无任何影响。</p>
<h4 id="硬件平台及-bios-设置">硬件平台及 BIOS 设置</h4>
<p>因为参考的主要文章是针对 <strong>Legacy</strong> 启动的，所以本文也是基于此而生。</p>
<ul>
<li>M910Q 准系统</li>
<li>Inter I5 8400魔改</li>
</ul>
<h6 id="bios设置">BIOS设置</h6>
<p>首先确保VT-D是启用的状态，然后要开启CSM即兼容模块，打开 <strong>Legacy</strong> 启动。<br>
<img src="https://微软.云.eu.org/imbsystemsod=om=libing_icecome_com=Ef-iyXLSNAtCnpfrPo81ThABknRmhofI_4xNPk7zKRfG4A" width="100%"></p>
<h4 id="1pve直通设置">1.PVE直通设置</h4>
<p>正式进入正题，这里我参考了多个教程后修改成的我自己的方式，因为有些设置在我的设备中出现了各种各样的问题，所以能看到我这个内容的要学会变通。</p>
<h5 id="11-开启底层的硬件直通功能">1.1 开启底层的硬件直通功能</h5>
<p>首先进入 <strong>PVE</strong> 的 <strong>shell</strong> 界面，编辑<code>/etc/default/grub</code>，这里我使用的是<code>vim</code>，可能有些比我更小白的朋友输入命令不管用，那就是没安装，可以使用<code>nano</code>，大佬就忽略吧。<br>
编辑 <code>/etc/default/grub</code></p>
<pre><code>vim /etc/default/grub
</code></pre>
<p>找到：</p>
<pre><code>GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet&quot;
</code></pre>
<p>修改为：</p>
<pre><code>GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet intel_iommu=on iommu=pt video=efifb:off,vesafb:off&quot;
</code></pre>
<figure data-type="image" tabindex="1"><img src="https://xn--g5ty67h.xn--9kq.eu.org/imbsystemsod=om=libing_icecome_com=EVV6TbZ5TRFHmq5TRPX6CSgBAJ4PjfLLSed2gG5-TURm5g" alt="直通参数" loading="lazy"></figure>
<p>此处，</p>
<ul>
<li><strong>iommu</strong> 开启直通分组</li>
<li><strong>efifb:off</strong> 禁用 <strong>efi</strong> 启动的显示设备</li>
<li><strong>vesafb:off</strong> 禁用 <strong>legacy</strong> 启动的显示设备</li>
</ul>
<p>更新 <strong>grub</strong> 配置文件</p>
<pre><code>update-grub
</code></pre>
<h5 id="12-加载模块">1.2 加载模块</h5>
<p>编辑 <code>/etc/modules</code></p>
<pre><code>vim /etc/modules
</code></pre>
<p>该文件是空白的，直接复制进去即可，具体每个是什么意思，我也暂时没找到解释。</p>
<pre><code>vfio
vfio_iommu_type1
vfio_pci
vfio_virqfd
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://xn--g5ty67h.xn--9kq.eu.org/imbsystemsod=om=libing_icecome_com=EaWbhuztOkFGt9PJ9b0NGH0BiysjSwkrPgVwkIH0bsbJTA" alt="模块参数" loading="lazy"></figure>
<h4 id="2禁用pve系统加载显卡驱动">2.禁用PVE系统加载显卡驱动</h4>
<p>因为 <strong>PVE</strong> 启动时会尝试加载显卡驱动，为了避免 <strong>PVE</strong> 占用显卡，需要阻止 <strong>PVE</strong> 的显卡驱动加载。</p>
<h5 id="21-添加黑名单">2.1 添加黑名单</h5>
<p>编辑 <code>/etc/modprobe.d/pve-blacklist.conf</code></p>
<pre><code>vim /etc/modprobe.d/pve-blacklist.conf
</code></pre>
<p>添加内容，</p>
<pre><code>blacklist snd_hda_intel
blacklist snd_hda_codec_hdmi
blacklist i915
</code></pre>
<figure data-type="image" tabindex="3"><img src="https://xn--g5ty67h.xn--9kq.eu.org/imbsystemsod=om=libing_icecome_com=EXrJi9Rq6rlMmvr8C85RGC8B023fG7RYH2DrQ_YMJF7tkg" alt="屏蔽参数" loading="lazy"></figure>
<p>由于我的平台仅有核显，所以未添加英伟达等黑名单，若是需直通独显，可能还需添加其他相关设备。</p>
<h5 id="22-查找显卡的设备id并添加直通">2.2 查找显卡的设备ID并添加直通</h5>
<p>查看显卡及声卡设备 <strong>ID</strong></p>
<pre><code>lspci -n | grep -E &quot;0300|0403&quot;
</code></pre>
<p>其中 0300 代表显卡，0403 代表声卡，如下所示，UHD630 的硬件 <strong>ID</strong> 是 <code>8086:3e92</code> 。</p>
<pre><code>00:02.0 0300: 8086:3e92
00:1f.3 0403: 8086:a2f0
</code></pre>
<h5 id="23-添加直通组">2.3 添加直通组</h5>
<p>找到显卡后记下硬件 <strong>ID</strong><br>
编辑 <code>/etc/modprobe.d/vfio.conf</code></p>
<pre><code>vim /etc/modprobe.d/vfio.conf
</code></pre>
<p>添加内容，硬件 <strong>ID</strong>需注意替换为自己的。</p>
<pre><code>options vfio-pci ids=8086:3e92
</code></pre>
<h5 id="24-添加-options-防止vm死机">2.4 添加 options 防止VM死机</h5>
<p>编辑 <code>/etc/modprobe.d/kvm.conf</code></p>
<pre><code>vim /etc/modprobe.d/kvm.conf
</code></pre>
<pre><code>options kvm ignore_msrs=1
</code></pre>
<p>不过好像并无作用，没成功的过程中，我的设备该死机还是会死机。</p>
<h5 id="25-更新内核并重启-pve-虚拟机">2.5 更新内核并重启 PVE 虚拟机</h5>
<pre><code>update-initramfs -u -k all
</code></pre>
<h5 id="26-输入命令检查模块是否加载成功">2.6 输入命令检查模块是否加载成功</h5>
<pre><code>lsmod | grep vfio
</code></pre>
<pre><code>root@bing6:~# lsmod | grep vfio
vfio_pci               16384  0
vfio_pci_core          73728  1 vfio_pci
vfio_virqfd            16384  1 vfio_pci_core
irqbypass              16384  2 vfio_pci_core,kvm
vfio_iommu_type1       40960  0
vfio                   45056  2 vfio_pci_core,vfio_iommu_type1
</code></pre>
<p>返回成功。</p>
<h4 id="3-win虚拟机设置">3. Win虚拟机设置</h4>
<h5 id="31-新建虚拟机">3.1 新建虚拟机</h5>
<p>新建虚拟机，显卡默认，机型默认 <strong>i440fx</strong> ，<strong>BIOS</strong> 默认 <strong>SeaBIOS</strong>，开启 <strong>Qemu</strong> 代理，<strong>CPU</strong> 开启 <strong>NUMA</strong>，确认。<br>
转到虚拟机设置的硬件，添加两块 <strong>CD/DVD</strong> 驱动器，挂载Windows系统安装ISO镜像，</p>
<pre><code>https://github.com/AveYo/MediaCreationTool.bat
</code></pre>
<p>以及VirtIO驱动ISO镜像</p>
<pre><code>https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/
</code></pre>
<h5 id="32-安装系统">3.2 安装系统</h5>
<p>开机装系统，安装驱动，关机。</p>
<h4 id="4-虚拟机参数配置">4. 虚拟机参数配置</h4>
<h5 id="41">4.1</h5>
<p>编辑 ```/etc/pve/qemu-server/<VMID>.conf```` ，</p>
<pre><code>vim /etc/pve/qemu-server/&lt;VMID&gt;.conf
</code></pre>
<p>首行添加内容，</p>
<pre><code>args: -set device.hostpci0.x-igd-gms=1
</code></pre>
<p>在直通核显一行后面添加 <strong>legacy-igd=1</strong>，如下所示</p>
<pre><code>hostpci0: 0000:00:02.0,legacy-igd=1
</code></pre>
<figure data-type="image" tabindex="4"><img src="https://xn--g5ty67h.xn--9kq.eu.org/imbsystemsod=om=libing_icecome_com=EUfXp_ff2PhEvVI7tI16FFkBLCFAMPnSOpU7rhF5a4TmmA" alt="直通参数" loading="lazy"></figure>
<p>此处需尤为注意，首行代码各教程均有不同方案，我试过多个方案，均无法正常直通。</p>
<p>由于本人小白水平，也无法搞清具体代码是什么意思，为什么需这样设置，所以尝试多次才确认此方案在我机器上可正常使用，不代表看到文章的所有人都适用。</p>
<h5 id="42-添加直通-pci-设备">4.2 添加直通 <strong>PCI</strong> 设备</h5>
<p>转到虚拟机设置的硬件，<br>
添加直通核显<br>
<img src="https://xn--g5ty67h.xn--9kq.eu.org/imbsystemsod=om=libing_icecome_com=EZKV0sRmPxhLjKO0idsU2nABTqBDp99PXtJEBjz2lKFPuw" alt="添加直通核显" loading="lazy"><br>
添加直通声卡<br>
<img src="https://xn--g5ty67h.xn--9kq.eu.org/imbsystemsod=om=libing_icecome_com=EcgpQgMrDVVHjwg349WUFfQBtFyBwCEYrIw6Edo3lwbpBQ" alt="添加直通声卡" loading="lazy"><br>
添加直通 USB<br>
<img src="https://xn--g5ty67h.xn--9kq.eu.org/imbsystemsod=om=libing_icecome_com=EVHtX_xJrURNhlzaFKqU_wkByxQlZFrndpqchv2ibqL0kg" alt="添加直通 USB" loading="lazy"></p>
<p>上述 <strong>PCI</strong> 设备添加完成后，将显示由<strong>默认</strong>改为<strong>无</strong>，改完若 <strong>PVE</strong> 已经连接显示器，启动虚拟机即可在物理显示器中正常使用。</p>
<p>注意，此时<strong>PVE</strong> 的控制台，由于更改了显示模式，会导致 <strong>VNC</strong> 无法连接，暂无解决方法。</p>
<p>最后值得注意的是，虚拟机的睡眠休眠需检查是否关闭。</p>
<h3 id="end">End.</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[闲言杂叙]]></title>
        <id>https://blog.icecome.com/t9QI1+Ed/</id>
        <link href="https://blog.icecome.com/t9QI1+Ed/">
        </link>
        <updated>2022-05-18T16:24:45.000Z</updated>
        <summary type="html"><![CDATA[<p>时隔经年，终于又能登录到网站上了。</p>
]]></summary>
        <content type="html"><![CDATA[<p>时隔经年，终于又能登录到网站上了。</p>
<!-- more -->
<p>之前说过，这个网站是使用 <strong>Gridea</strong> 运行在 <strong>GitHub</strong> 上的一个静态网站，所以我的更新都是通过<strong>Gridea</strong>完成的。但是出于一些我不知道的奇妙问题，突然某一天，程序就无法连接到 <strong>GitHub</strong> 了。直连，或者通过某种魔法都不行，于是就只能放在一边。碰巧我也是一个惫懒的性子，懒得找原因处理了。何况我也不懂！</p>
<p>就在今天，2022年5月19日凌晨，无意间打开 <strong>Gridea</strong>，发现作者更新了新版本的程序，于是更新了看看。正是这个心血来潮，发现原来不能连接的故障也没有了，真是太好了。那就连夜写点东西吧。</p>
<p>距离上次更新得有一年了，其实那些不算是更新，只不过是把我年轻中二时期写的网络小说的首章给发出来了。现在想想，我还是只适合看网络小说，而没有写作的天赋。倘若写博文也许要文笔的话，恐怕我该一个字也写不出来，哦，应该是敲不出来。</p>
<p>2021年下半年好像没什么让我印象深刻的，假如待业在家，啃老打游戏也算的话。不过，幸好年底老领导给我打电话，又把我这坨垃圾收容了过去。让我不至于一直当个无业游民。</p>
<p>不过确实想到中间一个插曲。</p>
<p>一直待业在家，没有收入来源，当然就不能乱花钱。毕竟手头存款不多，倘若照着以前有工作的时候一样，买买买，那不很快坐吃山空。所以除了尽力找新工作之外，也在想有没有其他路子。这不，网上看到如何申请失业救助金，让我眼前一亮。于是按照教程，一步一步，申请完成。</p>
<p>可是，<br>
申请好多天居然一点反映没有，没有短信，没有任何提醒，我都不知道有没有申请成功。所以，直接就当不存在这个事，转天就抛之脑后。</p>
<p>酝酿到这里，总该是到了转折的地方。虎年初的某一天，我无意间发现我的中国农业银行社保银行卡里居然有四千多块的巨款！！！这一度让我懵逼。我抓破脑皮也没想到，到底是哪来的这笔钱。问我妈，她也不知道。于是那几天翻来覆去的想这件事，突如其来的巨款，让我觉得自己随时有可能被警车带走。终于有一天，我在想起了登录农行的网上银行去看一下转账记录。发现上面备注：<strong>失业补助</strong>。</p>
<p>看记录的时间，原来当时应该是申请成功了，从七月到11月，发了好几个月的补助。至于为什么12月没有，大概是我当时刚刚好接到老领导的电话，又开始社畜工作了。</p>
<p>想想，白领几千块还是蛮开心的！！<br>
<img src="https://storage.live.com/items/6364F9CA9E81CC88!13113?authkey=AKokgDrs6tJvuHM" width="30%"></p>
<p>································································</p>
<p>再然后，过年，疫情爆发。某一天醒来，突然被告知封城了，没有一丝丝防备，它就这样发生了。好在小城市，措施到位的情况下，只封了将近二十天就没事了。不像某些超级大都市，人多地盘大，管理困难啊。</p>
<p>最近也没有什么好讲的了，我在网上淘了一个<strong>MiNi小主机</strong>，其实暂时也没有想好该用来干什么。既然买都买了，应该不至于吃灰吧！（就像以前买的那些早已想不起的某些电子垃圾一样）<br>
<img src="https://storage.live.com/items/6364F9CA9E81CC88!13114?authkey=AKokgDrs6tJvuHM" width="30%"></p>
<p>现在我在上面装上了<strong>Proxmox Virtual Environment</strong> <strong>PVE虚拟机</strong>，如下图所示：<br>
<img src="https://storage.live.com/items/6364F9CA9E81CC88!13115?authkey=AKokgDrs6tJvuHM" width="100%"><br>
里面被我安装了一个<strong>Windows10</strong>，可能以后还会安装写软路由系统、Linux、黑苹果、NAS系统等等，等我学会怎么去玩它吧。不过现在这台小主机还是有点差劲，硬盘装的是我从以前的笔记本上拆下来的256G M.2固态，属实有点小。等下个月发了工资，再加条更大的固态。</p>
<p>写到这，看看时间已经是凌晨一点二十四了，反正也是瞎侃，没有什么值得说的东西，就到这吧。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[小说 第一章]]></title>
        <id>https://blog.icecome.com/g6mbijtG/</id>
        <link href="https://blog.icecome.com/g6mbijtG/">
        </link>
        <updated>2021-06-15T16:24:38.000Z</updated>
        <content type="html"><![CDATA[<p>2017年12月21日，费米国立加速器研究所。</p>
<p>---------------------------------------</p>
<p>临近圣诞节，整个美国都洋溢着喜悦的心情。早期的圣诞节只是基督教徒纪念耶稣诞辰的节日。而历经千年，到了现代，圣诞节已经成了欧美国家的公共假日，其重要程度不亚于中国的春节。</p>
<p>当然，即使到了圣诞节，这也和费米研究所的研究员没有关系。因为这些天实验室正在进行一项非常重要的实验，而且已经到了最后关头。</p>
<p>“卢布博士，时间就要到了！”</p>
<p>年轻的佩克研究员是卢布博士的助理，才三十几岁，就能成为卢布博士的助理，他的未来可以想象。现在，他的表情非常凝重，这次实验是卢布博士自己的项目，而非研究所的任务。所以，参与的人员不是很多，他身为助理的任务就更加重要。况且，早在实验之前卢布博士就表示，如果试验成功，就向高层推荐，让他更进一步。为了自己的将来，他也要更严格的要求自己，做好每一点。</p>
<p>卢布博士没有回复，因为他正在打理自己的头发。尽管秃顶严重，但还是有些许不是。</p>
<p>过去一段时间，他都在为这个实验而准备着。研究所共有四级博士，他现在才是三级，上面还有好几个老头子。谁不想更进一步，更上一个级别，获得的权限和资源就越多。</p>
<p>时间良久，卢布严肃的看着镜子里的自己，秃顶、满脸皱纹、一撇刻意蓄起的白色胡子。他今年六十三岁，相比上边那几个老不死的还算年轻，但和下面一比就太老了。</p>
<p>美国疾病防护控制中心发布美国最新的平均年龄是78岁零两个月。但是谁会知道自己能活多久，爱因斯坦最后还不是得了绝症走的。</p>
<p>“博士！”“走吧。”</p>
<p>卢布紧了紧领口，这次也该轮到我了，历史也会留下我的名字。</p>
<p>-------------------------------------------------------------</p>
<p>这是一个宽广的空间，强烈的光线照耀着整个空间，在场两百多研究员，任何小小的变化都逃不过所有人的视线。</p>
<p>“都准备好了吗？”</p>
<p>卢布博士的声音通过联络器传播到位于不同位置的研究员耳边。</p>
<p>没有回声，一个个手势代替他们回答。这是卢布博士的规矩，他的实验中只能有他的声音，任何人不许交谈，他不允许任何差错发生。</p>
<p>深吸一口气，卢布在眼前的设备上敲打了几下。</p>
<p>“滴，三号设备准备完成，运行正常。”</p>
<p>“所有模组接驳完毕，预定任务已经启动，请录入指纹以确定。”</p>
<p>卢布将右手放在旁边的扫描仪上。</p>
<p>“身份匹配，预定任务开始运转。”</p>
<p>“嗡”，细微的机器运转声响起，空间中央原本封闭的白色巨球型设备缓慢旋转起来，颜色也变得透明，方便实验人员观察它的内部运行状况。</p>
<p>随着巨球旋转速度增加，它的中心竟然漂浮起一个奇异的东西。那是一个深蓝的晶体，在莫名的作用力下漂浮着，似乎还有点点星光伴随。</p>
<p>卢布博士痴迷的望着它，这是他无意间得到的。这次实验也起因当时的一道灵光，他深信这个晶体存在着天大的秘密。</p>
<p>“设备运转即将进入临界状态，XX粒子预备释放，5、4、3、2、1”</p>
<p>随着智能控制中心的播报，巨球顶部伸出一个针状的设备，倒数结束后，一股灰色的团状物质被喷射于晶体上。其实这些设备和晶体，在巨球设备中都很小，但经过放大，团状物质和晶体接触的瞬间就如同在所有人面前。</p>
<p>就是那么一瞬间，本来静止不动似乎任由人们折腾的晶体突然表面爆出一层光环，然后扩散。整个实验室的人被扫过那一瞬就如同冻住一般，从思维到肉体完全静止。</p>
<p>事实上，不止实验室的人，扩散的那光环，就在一刹那的功夫扫遍全球。这一刹那，整个星球都静止无声。时间太快，快的人们都没有察觉。永远都不知道自己曾经失去一秒。</p>
<hr>
<p>以上这些，是我在电脑里找到的，大概是17年写的吧。</p>
<p>由于爱看网络小说，所以也曾萌生自己写一本的想法。但是至今这个想法也没有实施。</p>
<p>可能还是觉得自身水平不够吧。</p>
<p>当初写时的想法已经不可知了。以我阅文十几年的眼光来看，这第一章，从语句通顺角度讲还算可以，没有明显出错处。使用错别字识别，也没发现有错别字。看来我写的时候也是相当仔细。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[新年第一篇]]></title>
        <id>https://blog.icecome.com/A1zDArzO/</id>
        <link href="https://blog.icecome.com/A1zDArzO/">
        </link>
        <updated>2021-02-24T16:27:05.000Z</updated>
        <summary type="html"><![CDATA[<p>从大的角度来看，今年的春节和往常没什么不同。</p>
<p>💔可从我家来看，变化又很大。以往三个人的春节，变成了两个人。<br>
他，永远的离开了我们母子俩，永远停留在了 <em>2020</em> 年。</p>
]]></summary>
        <content type="html"><![CDATA[<p>从大的角度来看，今年的春节和往常没什么不同。</p>
<p>💔可从我家来看，变化又很大。以往三个人的春节，变成了两个人。<br>
他，永远的离开了我们母子俩，永远停留在了 <em>2020</em> 年。</p>
<!-- more -->
<h3 id="除夕夜">除夕夜</h3>
<p>做了四个菜，炖带鱼，木须肉，超市买的熏肠，炖鸡块。<br>
可我们却没什么胃口。</p>
<h3 id="初一">初一</h3>
<p>🤝由于疫情的缘故，没有去串门拜年。这让我松了一口气。<br>
🙌早晨，先去了大爷家，老叔家。<br>
🙏然后是上坟，可是忘了给我爸带酒，只好点了几根烟。<br>
😭游庙，锣鼓喧天。如果我爸还在的话，他也是围观的一员吧。</p>
<h3 id="初二">初二</h3>
<p>💻打游戏。</p>
<h3 id="初三">初三</h3>
<p>📞本来今天应该去姥姥姥爷家，但是年前刚刚去过了，而且提倡疫情期间少串门拜年，所以我妈就说算了，不去了。</p>
<h3 id="初四-初五">初四、初五</h3>
<p>💻打游戏。</p>
<h3 id="初六">初六</h3>
<p>✋最后一天了，收拾收拾东西，该去上班了。</p>
<h3 id="初十">初十</h3>
<p>🏘年前就说好的，过了年，把妈妈接到身边来。于是回来这几天都在找房子。今天看了一个房子，比前几个都破。但是相对上班的地方很近，而且周围好几个大商场。所以，没有再挑剔，直接租下了。况且，只是小区老，外表破，其实屋内还是很凑合的。</p>
<h3 id="十一">十一</h3>
<p>📞出租屋没有宽带，于是联系了一个熟人想办理一个低资费的宽带，但是开通的话需要新开两个手机号，而我的身份证下只有一个位置了，所以暂时不能办理。其他几个都是以前公司需要而办理的测试卡，需要联系人去转移或者注销了。</p>
<h3 id="十三">十三</h3>
<p>今天联系了一个相关的负责人，得到消息，已经提交迁移工单了，预计周五才能释放多余的号码。看来这几天是不能装好宽带了，也暂时搬不进去了。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[剁手]]></title>
        <id>https://blog.icecome.com/wJ+iiBMw/</id>
        <link href="https://blog.icecome.com/wJ+iiBMw/">
        </link>
        <updated>2020-12-27T05:07:01.000Z</updated>
        <summary type="html"><![CDATA[<p>😀25 日京东新购机械键盘一副，299，今日取到手。</p>
]]></summary>
        <content type="html"><![CDATA[<p>😀25 日京东新购机械键盘一副，299，今日取到手。</p>
<!-- more -->
<p>🙄 键盘键程偏软，稍稍有些不喜，不过宿舍内使用，按键声较小，算是优点。<br>
由于条件简陋，就暂时不附照片了。🤔</p>
<p>上述文字均是用此键盘打出。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记录一次动手实践 之 搭建FRP穿透服务，实现远程桌面]]></title>
        <id>https://blog.icecome.com/GUcG6wzG-LIBING-PC/</id>
        <link href="https://blog.icecome.com/GUcG6wzG-LIBING-PC/">
        </link>
        <updated>2020-06-16T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>自从建了这个主页，一直没想好写什么东西，正巧碰上远程连接软件 <strong>Team Viewer</strong> 无法使用的情况， 在对比了多个远程连接软件后，选择了 <strong>Frp</strong> 作为解决我目前困境的一个方式的同时，也想记录下本次搭建的过程。</p>
]]></summary>
        <content type="html"><![CDATA[<p>自从建了这个主页，一直没想好写什么东西，正巧碰上远程连接软件 <strong>Team Viewer</strong> 无法使用的情况， 在对比了多个远程连接软件后，选择了 <strong>Frp</strong> 作为解决我目前困境的一个方式的同时，也想记录下本次搭建的过程。</p>
<!-- more -->
<p>Frp 全名：Fast Reverse Proxy，是一个可用于内网穿透的高性能的反向代理应用，支持 TCP, UDP, HTTP, HTTPS 协议。可以利用 Frp 内网穿透服务实现穿透处于内网或防火墙后的设备及主机；对外网环境提供 HTTP 或 HTTPS 服务；利用处于内网或防火墙后的机器，对外网环境提供 TCP/UDP 服务等。</p>
<p>比如我这次的搭建 Frp 服务的主要目的就是通过 <strong>Frp</strong> + <strong>RDP</strong> 访问处于公司内网环境内的主机，达到远程办公的目的。</p>
<blockquote>
<p>这里不得不提一句，<strong><em>Team Viewer</em></strong> 其实是一个很好用的远程软件，但是不知道为什么从 6 月开始突然大手笔的封杀了免费版，让我这个日常白嫖党，不禁有些措手不及。在尝试其他多款软件后，始终感觉效果不怎么样，于是，有了这次的实践。</p>
</blockquote>
<h1 id="frp-的作用"><strong>Frp 的作用</strong></h1>
<ul>
<li>利用处于内网或防火墙后的机器，对外网环境提供 <strong>HTTP</strong> 或 <strong>HTTPS</strong> 服务。</li>
<li>对于 <strong>HTTP</strong>, <strong>HTTPS</strong> 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个 80 端口。</li>
<li>利用处于内网或防火墙后的机器，对外网环境提供 TCP 和 UDP 服务，例如在家里通过 RDP/SSH 访问处于公司内网环境内的主机。<br>
</n></li>
</ul>
<h1 id="搭建过程"><strong>搭建过程</strong></h1>
<blockquote>
<p>😝😝 终于开始了，上面讲了好多我自己都看不懂的废话。不过，例行介绍还是有必要的。</p>
</blockquote>
<p>首先，介绍一下我安装 Frp 的 VPS 及配置，服务器是 GCP 的香港节点，f1 配置，1v CPU 和 0.5 G 内存。经过多次尝试，IP 段为 <strong><em>34.96.x.x</em></strong> ，在我这个小城市的联通延迟还是不错的，ping 大概维持在 70s-90s 上下。系统上我选择的是 Ubuntu 18.04 版本。</p>
<h2 id="服务器端"><strong>服务器端</strong></h2>
<h3 id="1下载程序"><strong>1.下载程序</strong></h3>
<p>前往 Frp 的 <strong>Github releases</strong> 页面下载最新版的、对应你的 VPS 的处理器架构的包，地址：<a href="https://github.com/fatedier/Frp/releases"><strong>Frp 内网穿透</strong></a> 。</p>
<p>其实目前大多数 VPS 主机商都是使用的 <strong>arm64</strong> 架构，所以下载时直接选择对应此架构的版本就可以。当然，如果不放心，也可以运行以下命令，查看一下你的 VPS 处理器架构：</p>
<pre><code>1  arch
</code></pre>
<p>如果输出 <strong>x86_64</strong> 那么就说明是 <strong>amd64</strong>，即需要下载带 <strong>linux_amd64</strong> 的那个压缩包；如果输出的是其他的，则在文件列表中寻找 <strong>linux</strong> 的对应架构的压缩包。记住，右键复制链接。</p>
<blockquote>
<p>本文便以 <strong><em>amd64</em></strong> 架构举例，截止我写文时， <strong><em>Frp</em></strong> 最新版是 <strong><em>v0.33.0</em></strong> 。</p>
</blockquote>
<pre><code>1  ## 切换到你想要 Frp 存放的目录，此处我选择的是 /home
2  ## 不要问我为什么，我不懂 Linux 目录结构 ，不知道这个目录的含义
3  ## 选择它纯粹是因为我搭建的时候看的教程是选择这个目录，你也可以选择其他的目录。
4  cd /home
5  ## 从 VPS 中下载 Frp 包
6  wget --no-check-certificate https://github.com/fatedier/Frp/releases/download/v0.33.0/frp_0.33.0_linux_amd64.tar.gz
7  ## 解包
8  tar -xzf frp_0.33.0_linux_amd64.tar.gz
9  ## 将文件夹名改成 Frp，不然目录太长了，一是记不住，二是也不方便操作
10  mv frp_0.33.0_linux_amd64 frp
11  ## 切换到 Frp 目录
12  cd /frp
13  ## 执行 chemod 命令，确保 Frps 程序具有可执行权限
14  chmod +x Frps
</code></pre>
<p>此处可以尝试运行一下，看看是否能正常运行：</p>
<pre><code>1  ./frps -help
</code></pre>
<p>正常情况下，大概会出现一页的帮助文档信息，这里我就不截图或者 <strong>print</strong> 下来了，没多大必要，<s>当然不是我懒</s> 。倘若你没有出现帮助信息，那或许是你下载的版本不对。如果你真的按照我上面的的步骤一步一步下来的话，应该是没问题的，哼 🤔！</p>
<h4 id="配置文件">配置文件</h4>
<table>
<thead>
<tr>
<th style="text-align:left">文档名称</th>
<th style="text-align:left">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">frpc</td>
<td style="text-align:left">客户端程序</td>
</tr>
<tr>
<td style="text-align:left">frpc.ini</td>
<td style="text-align:left">客户端配置文件</td>
</tr>
<tr>
<td style="text-align:left">frps</td>
<td style="text-align:left">服务端程序</td>
</tr>
<tr>
<td style="text-align:left">frps.ini</td>
<td style="text-align:left">服务端配置文件</td>
</tr>
</tbody>
</table>
<p>理论上整个包中，只有这些文件是有用的。其他的 LICENSE 、frps_full.ini[完整版配置文件] 的基本用不到。</p>
<h3 id="2配置程序"><strong>2.配置程序</strong></h3>
<p>你可以参考以下配置说明来书写配置文件 <strong>frps.ini</strong>，我觉得可以先在电脑上打一份草稿，先列举自己的需求。<br>
我这里列举了一些必要的、我用到的和你可能用到的配置，如果你想研究完整的配置说明可以看目录下的 <strong>frps_full.ini</strong> ，以及参考 <a href="https://github.com/fatedier/frp/blob/master/README_zh.md">Frp 中文说明</a> 。</p>
<pre><code>1  ## 这是是表头，代表配置从这里开始
2  [common]
3  ## frp 服务端端口（必须），默认是7000，可以自定义
4  bind_port = 7000
5  ## frp 服务端密钥（必须），是服务端与客户端认证的密码
6  token = 123456789
7  ## web 仪表盘端口，只有设置了才能使用仪表盘，一般默认就行
8  dashboard_port = 7500
9  ## 访问仪表盘的用户名密码，如果不设置，则默认都是 admin
10  dashboard_user = admin
11  dashboard_pwd = admin
12  ## 其实像我仅仅使用 TCP 穿透内网使用远程桌面的话，配置到此结束就可以了
13  ## 如果你想要用 frp 穿透访问内网中的网站（例如路由器设置页面）
14  ## 则必须要设置以下两个监听端口，不设置则不会开启这项功能
15  vhost_http_port = 8080
16  vhost_https_port = 443
17  ## 假设此项设置为 example.com，客户端配置 http 时将 subdomain 设置为 frp
18  ## 设定域名，将 frp.example.com 在你的域名解析商那里解析到你的主机 IP 地址
19  ## 之后就可以使用此域名来访问你的客户端对应的 HTTP
20  subdomain_host = example.com
</code></pre>
<p>检查没有什么想要增删的后，将配置文件写入 <strong>frps.ini</strong> 就可以了。这里介绍两种方法，<br>
（1）你可以使用 <strong>Vim</strong> 编辑器：</p>
<pre><code>apt-get vim install
</code></pre>
<p>一路 <strong>Y</strong> 确认，成功后，</p>
<pre><code>vim /home/frp/frps.ini
</code></pre>
<p>进入编辑配置文件，按下 <strong><code>insert</code></strong> 键，进入编辑模式，将你的配置文件复制进去，检查无误后，按下 <strong><code>Esc</code></strong> 退出编辑模式，直接输入 <strong>:wq!</strong> 保存并退出。</p>
<p><img src="https://cdn.sspai.com/2020/06/06/bf71a000e0dd5134db1cb30a422c5f42.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="960"></n></p>
<blockquote>
<p>这里搬运一张参考教程里的图片。</p>
</blockquote>
<p>（2）使用 <strong>echo</strong> 命令，直接将 配置文件写入 <strong>frps.ini</strong> 文档中：</p>
<pre><code>1  echo &quot;[common]
2  bind_port = 7000
3  token = 123456789
4  dashboard_port = 7500
5  dashboard_user = admin
6  dashboard_pwd = admin
7  vhost_http_port = 8080
8  vhost_https_port = 443
9  subdomain_host = example.com&quot; &gt; frps.ini
</code></pre>
<p>到此基本结束了，尝试启动一下 <strong>frps</strong></p>
<pre><code>1  ## 使用 -c 参数指定配置文件
2  ./frps -c frps.ini
</code></pre>
<p>仔细查看运行后的命令，出现绿色 <strong>success</strong> 字样，代表配置没有问题，可以正常使用了。此时，可以按下 <strong><code>Ctrl</code></strong> + <strong><code>c</code></strong> 终止程序，进行接下来的配置。</p>
<h3 id="3后台运行和开机自启"><strong>3.后台运行和开机自启</strong></h3>
<h4 id="启动">启动</h4>
<p>直接使用上面的命令运行是不行的，当断开 <strong>SSH</strong> 的时候，程序 <strong>frps</strong> 就会停止运行，因此可以使用 <strong>nohup</strong> 来使它在后台运行。</p>
<pre><code>1  nohup /home/frp/frps -c /home/frp/frps.ini &amp;
</code></pre>
<h4 id="停止">停止</h4>
<p>停止就使用 <strong>pkill</strong> ，结束 <strong>frps</strong> 即可。</p>
<pre><code>1  pkill frps
</code></pre>
<h4 id="重启">重启</h4>
<p>先停止，再启动。</p>
<h4 id="开机自启">开机自启</h4>
<p>对比了网上多种开机自启的方式，我最终选择了 <strong>systemctl</strong> 来控制，因为很好用，而且还方便，当然，原理我并不清楚，能用就行。</p>
<pre><code>1  ## 使用管理员权限编辑系统服务文件
2  sudo vim /lib/systemd/system/frps.service
</code></pre>
<p>在打开的 <strong>frps.service</strong> 中写入以下内容，</p>
<pre><code>1  [Unit]
2  Description=frps service
3  After=network.target syslog.target
4  Wants=network.target

5  [Service]
6  Type=simple
7  #启动服务的命令（此处写我们刚才存放 frps 的目录，或者你自定义存放的目录）
8  ExecStart=/home/frp/frps -c /home/frp/frps.ini

9  [Install]
10  WantedBy=multi-user.target
</code></pre>
<p>依照上面的方式保存。</p>
<p>那么，接下来就启动吧！</p>
<pre><code>sudo systemctl start frps
</code></pre>
<p>再打开自启动。</p>
<pre><code>sudo systemctl enable frps
</code></pre>
<h5 id="systemd常用命令">Systemd常用命令</h5>
<blockquote>
<ul>
<li>重启应用，<strong><em>sudo systemctl restart frps</em></strong></li>
<li>停止应用，<strong><em>sudo systemctl stop frps</em></strong></li>
<li>查看服务日志，<strong><em>sudo systemctl status frps</em></strong></li>
<li>设置开机启动，<strong><em>sudo systemctl enable frps</em></strong></li>
<li>配置文件有改动重新加载，<strong><em>systemctl daemon-reload</em></strong></li>
</ul>
</blockquote>
<h3 id="题外话">题外话</h3>
<p>使用 GCP 、阿里云、腾讯云等还需在安全组-入站规则内放开对应的端口，不然会出现客户端无法连接到服务端的情况。具体放开的方法见此：<a href="https://tools.miku.ac/o/search_help?q=YmFpZHUg5LqR5pyN5Yqh5Zmo5a6J5YWo57uE6K6-572u"><strong>云服务器安全组设置</strong></a>。</p>
<h2 id="客户端配置"><strong>客户端配置</strong></h2>
<h3 id="1书写配置"><strong>1.书写配置</strong></h3>
<h4 id="基本配置这是整个配置文件的必须">基本配置，这是整个配置文件的必须</h4>
<pre><code>1  ## 这个配置的开头，不用管它什么意思，反正必须有
2  [common]
3  ## frp 服务端的地址，可以是 IP 也可以是之前解析的域名
4  server_addr = frp.example.com
5  ## 服务端设定的端口，即上面服务端配置中的  bind_port
6  server_port = 7000
7  ## 服务端设定的密钥，即上面服务端配置中的  token
8  token = 123456789
</code></pre>
<h4 id="tcpudp">TCP/UDP</h4>
<p>这里以远程桌面连接为例，</p>
<pre><code>1  ## 自定义的配置名称，格式为 “[名称]” ，放在开头
2  [RDP]
3  ## 连接类型，填写 tcp 或 udp ,远程连接一般使用 tcp
4  type = tcp
5  ## 本地ip，填你需要转发到的目的ip
6  ## 如果是转发到frp客户端所在本机（比如远程主机）则填 127.0.0.1
7  ##否则填对应机器的内网ip
8  local_ip = 127.0.0.1
9  ## 需要转发的端口，比如远程连接的端口是 3389
10  local_port = 3389
11  ## frp 服务端的远程监听端口，即你访问服务端的 remote_port 就相当于访问
12  ## 客户端的 local_port ，如果填0则会随机分配一个端口
13  remote_port = 3390
14  ## 是否加密客户端与服务端之间的通信，默认是 false
15  use_encryption = false
16  ## 是否压缩客户端与服务端之间的通信，默认是 false
17  use_compression = false
18  ## 压缩可以节省流量，但需要消耗 CPU 资源
19  ## 加密自然也会消耗 CPU 资源，但是不大
</code></pre>
<p>鉴于我只是为了远程桌面连接而配置的 <strong>frp</strong> ，其他的我没有深入去了解，想了解的可以去<a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"><strong>参考资料</strong></a>中自己学习。</p>
<h3 id="2合并配置"><strong>2.合并配置</strong></h3>
<p>上面已经将基本我们需要的配置都写出来了，将二者合而为一，然后填写到 <strong>frpc.ini</strong> 配置文件中。看起来就是这样子的：</p>
<pre><code>1  [common]
2  server_addr = frp.example.com
3  server_port = 7000
4  token = 123456789
5  [RDP]
6  type = tcp
7  local_ip = 127.0.0.1
8  local_port = 3389
9  remote_port = 3390
10  use_encryption = false
11  use_compression = false
</code></pre>
<p>将下载的对应你的远程主机版本的 <strong>frpc</strong> 客户端文件，解压在一个方便的位置，例如我的存放位置在</p>
<pre><code>c:/frp
</code></pre>
<p>在当前文件夹，按住 <strong><code>shfit</code></strong> + <strong><code>鼠标右键</code></strong> ，在出现的右键菜单中选择 <strong><code>从此处打开 PowerShell 窗口</code></strong> ，也有可能是 <strong><code>从此处打开 CMD 窗口</code></strong> ，并执行</p>
<pre><code>./frpc -c frpc.ini
</code></pre>
<p>如果出现的是如下结果，则说明 frp 客户端启动成功。</p>
<pre><code>PS C:\frp&gt; ./frpc -c frpc.ini
2020/06/16 16:25:19 [I] [service.go:282] [34gd169d91sffsa6] login to server success, get run id [34gd169d91sffsa6], server udp port [0]
2020/06/16 16:25:19 [I] [proxy_manager.go:144] [34gd169d91sffsa6] proxy added: [RDP]
2020/06/16 16:25:19 [I] [control.go:179] [34gd169d91sffsa6] [RDP] start proxy success
</code></pre>
<p>记住末尾的 <strong>start proxy success</strong> 出现这个字样，代表已经启动成功，如果不是这个，就要检查是否配置文件错误，是否与远程服务器连接不通畅。</p>
<h3 id="3开机自启"><strong>3.开机自启</strong></h3>
<p>关于 Windows 客户端如何开机自启，网上也有很多方式，什么脚本啊、注册服务啊，多不胜数，这里我介绍一种使用非常简单的方式，纯粹的可视化图形交互界面，简单几步就能将程序注册为系统服务。</p>
<h4 id="1下载软件">（1）下载软件</h4>
<p>下载地址：<a href="https://cloud.189.cn/t/ieiUFv7fEJB3"><strong>SrvanyUI</strong></a> 访问码：<strong>wl5f</strong></p>
<p>Srvany 是微软套件的一个小工具,可以手动将程序或其他可执行文件注册为系统服务。但是操作涉及到注册表操作，使用颇为不便。而 SrvanyUI 是一位大神，封装简化的可视化工具，将原本繁琐的操作，点击几下键盘就能完成。</p>
<p>下载完成后，将程序放在一个比较顺手的文件夹，</p>
<h4 id="2-创建服务">(2) 创建服务</h4>
<p>打开 <strong>SrvanyUI</strong> ，截图如下：</p>
<img src="https://storage.live.com/items/6364F9CA9E81CC88!3455?authkey=AKokgDrs6tJvuHM" width="400">
<p>选择左上角工具栏第一个绿色的 <strong>+</strong> 号，开始添加服务，如下图所示，依次选择自建服务，填写完整 <strong>名称</strong> ，<strong>选项</strong> 等内容，然后点击确定，开始使用吧！</p>
<img src="https://storage.live.com/items/6364F9CA9E81CC88!3453?authkey=AKokgDrs6tJvuHM" width="400">
<p>大功告成！此时，按下 <strong><code>win</code></strong> + <strong><code>x</code></strong> ，点击 <strong>计算机管理</strong> ，打开 <strong>服务和程序</strong> -&gt; <strong>服务</strong> ，看看 FRP 服务是否已经存在并启动了呢！</p>
<img src="https://storage.live.com/items/6364F9CA9E81CC88!3454?authkey=AKokgDrs6tJvuHM" width="528">
<h1 id="结尾"><strong>结尾</strong></h1>
<p>至此，所有步骤都已完成。<br>
在其他电脑使用 <strong><code>win</code></strong> + <strong><code>r</code></strong> 弹出运行窗口，输入 <strong>mstsc</strong> 并确定，打开远程桌面连接，输入你设定的 <strong>域名</strong> : <strong>端口</strong>，如 <strong>frp.xxx.com:7001</strong> ，账户和密码就是你设置的这台被远程客户端的登录账户和密码，连接远程桌面看看吧。</p>
<h1 id="参考资料"><strong>参考资料</strong></h1>
<blockquote>
<ul>
<li>官方配置使用说明：<a href="https://github.com/fatedier/frp/blob/master/README_zh.md">https://github.com/fatedier/frp/blob/master/README_zh.md</a></li>
<li>frp 官方中文文档：<a href="https://www.cnblogs.com/sanduzxcvbnm/p/8508741.html">https://www.cnblogs.com/sanduzxcvbnm/p/8508741.html</a></li>
<li>Frp 内网穿透工具的搭建和使用方法：<a href="https://code.skyheng.com/post/52586.html">https://code.skyheng.com/post/52586.html</a></li>
<li>使用 FRP 反向代理实现 Windows 远程连接：<a href="https://www.cnblogs.com/zhanggaoxing/p/9221705.html">https://www.cnblogs.com/zhanggaoxing/p/9221705.html</a></li>
<li>用开源免费的内网穿透工具 frp，实现远程桌面和文件传输 - 少数派：<a href="https://sspai.com/post/60852">https://sspai.com/post/60852</a></li>
<li>FRP 内网穿透 Windows 远程桌面：<a href="https://www.cnblogs.com/ingxx/p/12255241.html">https://www.cnblogs.com/ingxx/p/12255241.html</a></li>
<li>SrvanyUI 服务管理工具发布：<a href="https://wangye.org/blog/archives/644/">https://wangye.org/blog/archives/644/</a></li>
</ul>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记录一次动手实践 之 搭建FRP穿透服务，实现远程桌面]]></title>
        <id>https://blog.icecome.com/GUcG6wzG/</id>
        <link href="https://blog.icecome.com/GUcG6wzG/">
        </link>
        <updated>2020-06-16T12:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>自从建了这个主页，一直没想好写什么东西，正巧碰上远程连接软件 <strong>Team Viewer</strong> 无法使用的情况， 在对比了多个远程连接软件后，选择了 <strong>Frp</strong> 作为解决我目前困境的一个方式的同时，也想记录下本次搭建的过程。</p>
]]></summary>
        <content type="html"><![CDATA[<p>自从建了这个主页，一直没想好写什么东西，正巧碰上远程连接软件 <strong>Team Viewer</strong> 无法使用的情况， 在对比了多个远程连接软件后，选择了 <strong>Frp</strong> 作为解决我目前困境的一个方式的同时，也想记录下本次搭建的过程。</p>
<!-- more -->
<p>Frp 全名：Fast Reverse Proxy，是一个可用于内网穿透的高性能的反向代理应用，支持 TCP, UDP, HTTP, HTTPS 协议。可以利用 Frp 内网穿透服务实现穿透处于内网或防火墙后的设备及主机；对外网环境提供 HTTP 或 HTTPS 服务；利用处于内网或防火墙后的机器，对外网环境提供 TCP/UDP 服务等。</p>
<p>比如我这次的搭建 Frp 服务的主要目的就是通过 <strong>Frp</strong> + <strong>RDP</strong> 访问处于公司内网环境内的主机，达到远程办公的目的。</p>
<blockquote>
<p>这里不得不提一句，<strong><em>Team Viewer</em></strong> 其实是一个很好用的远程软件，但是不知道为什么从 6 月开始突然大手笔的封杀了免费版，让我这个日常白嫖党，不禁有些措手不及。在尝试其他多款软件后，始终感觉效果不怎么样，于是，有了这次的实践。</p>
</blockquote>
<h1 id="frp-的作用"><strong>Frp 的作用</strong></h1>
<ul>
<li>利用处于内网或防火墙后的机器，对外网环境提供 <strong>HTTP</strong> 或 <strong>HTTPS</strong> 服务。</li>
<li>对于 <strong>HTTP</strong>, <strong>HTTPS</strong> 服务支持基于域名的虚拟主机，支持自定义域名绑定，使多个域名可以共用一个 80 端口。</li>
<li>利用处于内网或防火墙后的机器，对外网环境提供 TCP 和 UDP 服务，例如在家里通过 RDP/SSH 访问处于公司内网环境内的主机。<br>
</n></li>
</ul>
<h1 id="搭建过程"><strong>搭建过程</strong></h1>
<blockquote>
<p>😝😝 终于开始了，上面讲了好多我自己都看不懂的废话。不过，例行介绍还是有必要的。</p>
</blockquote>
<p>首先，介绍一下我安装 Frp 的 VPS 及配置，服务器是 GCP 的香港节点，f1 配置，1v CPU 和 0.5 G 内存。经过多次尝试，IP 段为 <strong><em>34.96.x.x</em></strong> ，在我这个小城市的联通延迟还是不错的，ping 大概维持在 70s-90s 上下。系统上我选择的是 Ubuntu 18.04 版本。</p>
<h2 id="服务器端"><strong>服务器端</strong></h2>
<h3 id="1下载程序"><strong>1.下载程序</strong></h3>
<p>前往 Frp 的 <strong>Github releases</strong> 页面下载最新版的、对应你的 VPS 的处理器架构的包，地址：<a href="https://github.com/fatedier/Frp/releases"><strong>Frp 内网穿透</strong></a> 。</p>
<p>其实目前大多数 VPS 主机商都是使用的 <strong>arm64</strong> 架构，所以下载时直接选择对应此架构的版本就可以。当然，如果不放心，也可以运行以下命令，查看一下你的 VPS 处理器架构：</p>
<pre><code>1  arch
</code></pre>
<p>如果输出 <strong>x86_64</strong> 那么就说明是 <strong>amd64</strong>，即需要下载带 <strong>linux_amd64</strong> 的那个压缩包；如果输出的是其他的，则在文件列表中寻找 <strong>linux</strong> 的对应架构的压缩包。记住，右键复制链接。</p>
<blockquote>
<p>本文便以 <strong><em>amd64</em></strong> 架构举例，截止我写文时， <strong><em>Frp</em></strong> 最新版是 <strong><em>v0.33.0</em></strong> 。</p>
</blockquote>
<pre><code>1  ## 切换到你想要 Frp 存放的目录，此处我选择的是 /home
2  ## 不要问我为什么，我不懂 Linux 目录结构 ，不知道这个目录的含义
3  ## 选择它纯粹是因为我搭建的时候看的教程是选择这个目录，你也可以选择其他的目录。
4  cd /home
5  ## 从 VPS 中下载 Frp 包
6  wget --no-check-certificate https://github.com/fatedier/Frp/releases/download/v0.33.0/frp_0.33.0_linux_amd64.tar.gz
7  ## 解包
8  tar -xzf frp_0.33.0_linux_amd64.tar.gz
9  ## 将文件夹名改成 Frp，不然目录太长了，一是记不住，二是也不方便操作
10  mv frp_0.33.0_linux_amd64 frp
11  ## 切换到 Frp 目录
12  cd /frp
13  ## 执行 chemod 命令，确保 Frps 程序具有可执行权限
14  chmod +x Frps
</code></pre>
<p>此处可以尝试运行一下，看看是否能正常运行：</p>
<pre><code>1  ./frps -help
</code></pre>
<p>正常情况下，大概会出现一页的帮助文档信息，这里我就不截图或者 <strong>print</strong> 下来了，没多大必要，<s>当然不是我懒</s> 。倘若你没有出现帮助信息，那或许是你下载的版本不对。如果你真的按照我上面的的步骤一步一步下来的话，应该是没问题的，哼 🤔！</p>
<h4 id="配置文件">配置文件</h4>
<table>
<thead>
<tr>
<th style="text-align:left">文档名称</th>
<th style="text-align:left">功能</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">frpc</td>
<td style="text-align:left">客户端程序</td>
</tr>
<tr>
<td style="text-align:left">frpc.ini</td>
<td style="text-align:left">客户端配置文件</td>
</tr>
<tr>
<td style="text-align:left">frps</td>
<td style="text-align:left">服务端程序</td>
</tr>
<tr>
<td style="text-align:left">frps.ini</td>
<td style="text-align:left">服务端配置文件</td>
</tr>
</tbody>
</table>
<p>理论上整个包中，只有这些文件是有用的。其他的 LICENSE 、frps_full.ini[完整版配置文件] 的基本用不到。</p>
<h3 id="2配置程序"><strong>2.配置程序</strong></h3>
<p>你可以参考以下配置说明来书写配置文件 <strong>frps.ini</strong>，我觉得可以先在电脑上打一份草稿，先列举自己的需求。<br>
我这里列举了一些必要的、我用到的和你可能用到的配置，如果你想研究完整的配置说明可以看目录下的 <strong>frps_full.ini</strong> ，以及参考 <a href="https://github.com/fatedier/frp/blob/master/README_zh.md">Frp 中文说明</a> 。</p>
<pre><code>1  ## 这是是表头，代表配置从这里开始
2  [common]
3  ## frp 服务端端口（必须），默认是7000，可以自定义
4  bind_port = 7000
5  ## frp 服务端密钥（必须），是服务端与客户端认证的密码
6  token = 123456789
7  ## web 仪表盘端口，只有设置了才能使用仪表盘，一般默认就行
8  dashboard_port = 7500
9  ## 访问仪表盘的用户名密码，如果不设置，则默认都是 admin
10  dashboard_user = admin
11  dashboard_pwd = admin
12  ## 其实像我仅仅使用 TCP 穿透内网使用远程桌面的话，配置到此结束就可以了
13  ## 如果你想要用 frp 穿透访问内网中的网站（例如路由器设置页面）
14  ## 则必须要设置以下两个监听端口，不设置则不会开启这项功能
15  vhost_http_port = 8080
16  vhost_https_port = 443
17  ## 假设此项设置为 example.com，客户端配置 http 时将 subdomain 设置为 frp
18  ## 设定域名，将 frp.example.com 在你的域名解析商那里解析到你的主机 IP 地址
19  ## 之后就可以使用此域名来访问你的客户端对应的 HTTP
20  subdomain_host = example.com
</code></pre>
<p>检查没有什么想要增删的后，将配置文件写入 <strong>frps.ini</strong> 就可以了。这里介绍两种方法，<br>
（1）你可以使用 <strong>Vim</strong> 编辑器：</p>
<pre><code>apt-get vim install
</code></pre>
<p>一路 <strong>Y</strong> 确认，成功后，</p>
<pre><code>vim /home/frp/frps.ini
</code></pre>
<p>进入编辑配置文件，按下 <strong><code>insert</code></strong> 键，进入编辑模式，将你的配置文件复制进去，检查无误后，按下 <strong><code>Esc</code></strong> 退出编辑模式，直接输入 <strong>:wq!</strong> 保存并退出。</p>
<p><img src="https://cdn.sspai.com/2020/06/06/bf71a000e0dd5134db1cb30a422c5f42.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" width="960"></n></p>
<blockquote>
<p>这里搬运一张参考教程里的图片。</p>
</blockquote>
<p>（2）使用 <strong>echo</strong> 命令，直接将 配置文件写入 <strong>frps.ini</strong> 文档中：</p>
<pre><code>1  echo &quot;[common]
2  bind_port = 7000
3  token = 123456789
4  dashboard_port = 7500
5  dashboard_user = admin
6  dashboard_pwd = admin
7  vhost_http_port = 8080
8  vhost_https_port = 443
9  subdomain_host = example.com&quot; &gt; frps.ini
</code></pre>
<p>到此基本结束了，尝试启动一下 <strong>frps</strong></p>
<pre><code>1  ## 使用 -c 参数指定配置文件
2  ./frps -c frps.ini
</code></pre>
<p>仔细查看运行后的命令，出现绿色 <strong>success</strong> 字样，代表配置没有问题，可以正常使用了。此时，可以按下 <strong><code>Ctrl</code></strong> + <strong><code>c</code></strong> 终止程序，进行接下来的配置。</p>
<h3 id="3后台运行和开机自启"><strong>3.后台运行和开机自启</strong></h3>
<h4 id="启动">启动</h4>
<p>直接使用上面的命令运行是不行的，当断开 <strong>SSH</strong> 的时候，程序 <strong>frps</strong> 就会停止运行，因此可以使用 <strong>nohup</strong> 来使它在后台运行。</p>
<pre><code>1  nohup /home/frp/frps -c /home/frp/frps.ini &amp;
</code></pre>
<h4 id="停止">停止</h4>
<p>停止就使用 <strong>pkill</strong> ，结束 <strong>frps</strong> 即可。</p>
<pre><code>1  pkill frps
</code></pre>
<h4 id="重启">重启</h4>
<p>先停止，再启动。</p>
<h4 id="开机自启">开机自启</h4>
<p>对比了网上多种开机自启的方式，我最终选择了 <strong>systemctl</strong> 来控制，因为很好用，而且还方便，当然，原理我并不清楚，能用就行。</p>
<pre><code>1  ## 使用管理员权限编辑系统服务文件
2  sudo vim /lib/systemd/system/frps.service
</code></pre>
<p>在打开的 <strong>frps.service</strong> 中写入以下内容，</p>
<pre><code>1  [Unit]
2  Description=fraps service
3  After=network.target syslog.target
4  Wants=network.target

5  [Service]
6  Type=simple
7  #启动服务的命令（此处写我们刚才存放 frps 的目录，或者你自定义存放的目录）
8  ExecStart=/home/frp/frps -c /home/frp/frps.ini

9  [Install]
10  WantedBy=multi-user.target
</code></pre>
<p>依照上面的方式保存。</p>
<p>那么，接下来就启动吧！</p>
<pre><code>sudo systemctl start frps
</code></pre>
<p>再打开自启动。</p>
<pre><code>sudo systemctl enable frps
</code></pre>
<h5 id="systemd常用命令">Systemd常用命令</h5>
<blockquote>
<ul>
<li>重启应用，<strong><em>sudo systemctl restart frps</em></strong></li>
<li>停止应用，<strong><em>sudo systemctl stop frps</em></strong></li>
<li>查看服务日志，<strong><em>sudo systemctl status frps</em></strong></li>
<li>设置开机启动，<strong><em>sudo systemctl enable frps</em></strong></li>
<li>配置文件有改动重新加载，<strong><em>systemctl daemon-reload</em></strong></li>
</ul>
</blockquote>
<h3 id="题外话">题外话</h3>
<p>使用 GCP 、阿里云、腾讯云等还需在安全组-入站规则内放开对应的端口，不然会出现客户端无法连接到服务端的情况。具体放开的方法见此：<a href="https://tools.miku.ac/o/search_help?q=YmFpZHUg5LqR5pyN5Yqh5Zmo5a6J5YWo57uE6K6-572u"><strong>云服务器安全组设置</strong></a>。</p>
<h2 id="客户端配置"><strong>客户端配置</strong></h2>
<h3 id="1书写配置"><strong>1.书写配置</strong></h3>
<h4 id="基本配置这是整个配置文件的必须">基本配置，这是整个配置文件的必须</h4>
<pre><code>1  ## 这个配置的开头，不用管它什么意思，反正必须有
2  [common]
3  ## frp 服务端的地址，可以是 IP 也可以是之前解析的域名
4  server_addr = frp.example.com
5  ## 服务端设定的端口，即上面服务端配置中的  bind_port
6  server_port = 7000
7  ## 服务端设定的密钥，即上面服务端配置中的  token
8  token = 123456789
</code></pre>
<h4 id="tcpudp">TCP/UDP</h4>
<p>这里以远程桌面连接为例，</p>
<pre><code>1  ## 自定义的配置名称，格式为 “[名称]” ，放在开头
2  [RDP]
3  ## 连接类型，填写 tcp 或 udp ,远程连接一般使用 tcp
4  type = tcp
5  ## 本地ip，填你需要转发到的目的ip
6  ## 如果是转发到frp客户端所在本机（比如远程主机）则填 127.0.0.1
7  ##否则填对应机器的内网ip
8  local_ip = 127.0.0.1
9  ## 需要转发的端口，比如远程连接的端口是 3389
10  local_port = 3389
11  ## frp 服务端的远程监听端口，即你访问服务端的 remote_port 就相当于访问
12  ## 客户端的 local_port ，如果填0则会随机分配一个端口
13  remote_port = 3390
14  ## 是否加密客户端与服务端之间的通信，默认是 false
15  use_encryption = false
16  ## 是否压缩客户端与服务端之间的通信，默认是 false
17  use_compression = false
18  ## 压缩可以节省流量，但需要消耗 CPU 资源
19  ## 加密自然也会消耗 CPU 资源，但是不大
</code></pre>
<p>鉴于我只是为了远程桌面连接而配置的 <strong>frp</strong> ，其他的我没有深入去了解，想了解的可以去<a href="#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99"><strong>参考资料</strong></a>中自己学习。</p>
<h3 id="2合并配置"><strong>2.合并配置</strong></h3>
<p>上面已经将基本我们需要的配置都写出来了，将二者合而为一，然后填写到 <strong>frpc.ini</strong> 配置文件中。看起来就是这样子的：</p>
<pre><code>1  [common]
2  server_addr = frp.example.com
3  server_port = 7000
4  token = 123456789
5  [RDP]
6  type = tcp
7  local_ip = 127.0.0.1
8  local_port = 3389
9  remote_port = 3390
10  use_encryption = false
11  use_compression = false
</code></pre>
<p>将下载的对应你的远程主机版本的 <strong>frpc</strong> 客户端文件，解压在一个方便的位置，例如我的存放位置在</p>
<pre><code>c:/frp
</code></pre>
<p>在当前文件夹，按住 <strong><code>shfit</code></strong> + <strong><code>鼠标右键</code></strong> ，在出现的右键菜单中选择 <strong><code>从此处打开 PowerShell 窗口</code></strong> ，也有可能是 <strong><code>从此处打开 CMD 窗口</code></strong> ，并执行</p>
<pre><code>./frpc -c frpc.ini
</code></pre>
<p>如果出现的是如下结果，则说明 frp 客户端启动成功。</p>
<pre><code>PS C:\frp&gt; ./frpc -c frpc.ini
2020/06/16 16:25:19 [I] [service.go:282] [34gd169d91sffsa6] login to server success, get run id [34gd169d91sffsa6], server udp port [0]
2020/06/16 16:25:19 [I] [proxy_manager.go:144] [34gd169d91sffsa6] proxy added: [RDP]
2020/06/16 16:25:19 [I] [control.go:179] [34gd169d91sffsa6] [RDP] start proxy success
</code></pre>
<p>记住末尾的 <strong>start proxy success</strong> 出现这个字样，代表已经启动成功，如果不是这个，就要检查是否配置文件错误，是否与远程服务器连接不通畅。</p>
<h3 id="3开机自启"><strong>3.开机自启</strong></h3>
<p>关于 Windows 客户端如何开机自启，网上也有很多方式，什么脚本啊、注册服务啊，多不胜数，这里我介绍一种使用非常简单的方式，纯粹的可视化图形交互界面，简单几步就能将程序注册为系统服务。</p>
<h4 id="1下载软件">（1）下载软件</h4>
<p>下载地址：<a href="https://cloud.189.cn/t/ieiUFv7fEJB3"><strong>SrvanyUI</strong></a> 访问码：<strong>wl5f</strong></p>
<p>Srvany 是微软套件的一个小工具,可以手动将程序或其他可执行文件注册为系统服务。但是操作涉及到注册表操作，使用颇为不便。而 SrvanyUI 是一位大神，封装简化的可视化工具，将原本繁琐的操作，点击几下键盘就能完成。</p>
<p>下载完成后，将程序放在一个比较顺手的文件夹，</p>
<h4 id="2-创建服务">(2) 创建服务</h4>
<p>打开 <strong>SrvanyUI</strong> ，截图如下：</p>
<img src="https://storage.live.com/items/6364F9CA9E81CC88!3455?authkey=AKokgDrs6tJvuHM" width="400">
<p>选择左上角工具栏第一个绿色的 <strong>+</strong> 号，开始添加服务，如下图所示，依次选择自建服务，填写完整 <strong>名称</strong> ，<strong>选项</strong> 等内容，然后点击确定，开始使用吧！</p>
<img src="https://storage.live.com/items/6364F9CA9E81CC88!3453?authkey=AKokgDrs6tJvuHM" width="400">
<p>大功告成！此时，按下 <strong><code>win</code></strong> + <strong><code>x</code></strong> ，点击 <strong>计算机管理</strong> ，打开 <strong>服务和程序</strong> -&gt; <strong>服务</strong> ，看看 FRP 服务是否已经存在并启动了呢！</p>
<img src="https://storage.live.com/items/6364F9CA9E81CC88!3454?authkey=AKokgDrs6tJvuHM" width="528">
<h1 id="结尾"><strong>结尾</strong></h1>
<p>至此，所有步骤都已完成。<br>
在其他电脑使用 <strong><code>win</code></strong> + <strong><code>r</code></strong> 弹出运行窗口，输入 <strong>mstsc</strong> 并确定，打开远程桌面连接，输入你设定的 <strong>域名</strong> : <strong>端口</strong>，如 <strong>frp.xxx.com:7001</strong> ，账户和密码就是你设置的这台被远程客户端的登录账户和密码，连接远程桌面看看吧。</p>
<h1 id="参考资料"><strong>参考资料</strong></h1>
<blockquote>
<ul>
<li>官方配置使用说明：<a href="https://github.com/fatedier/frp/blob/master/README_zh.md">https://github.com/fatedier/frp/blob/master/README_zh.md</a></li>
<li>frp 官方中文文档：<a href="https://www.cnblogs.com/sanduzxcvbnm/p/8508741.html">https://www.cnblogs.com/sanduzxcvbnm/p/8508741.html</a></li>
<li>Frp 内网穿透工具的搭建和使用方法：<a href="https://code.skyheng.com/post/52586.html">https://code.skyheng.com/post/52586.html</a></li>
<li>使用 FRP 反向代理实现 Windows 远程连接：<a href="https://www.cnblogs.com/zhanggaoxing/p/9221705.html">https://www.cnblogs.com/zhanggaoxing/p/9221705.html</a></li>
<li>用开源免费的内网穿透工具 frp，实现远程桌面和文件传输 - 少数派：<a href="https://sspai.com/post/60852">https://sspai.com/post/60852</a></li>
<li>FRP 内网穿透 Windows 远程桌面：<a href="https://www.cnblogs.com/ingxx/p/12255241.html">https://www.cnblogs.com/ingxx/p/12255241.html</a></li>
<li>SrvanyUI 服务管理工具发布：<a href="https://wangye.org/blog/archives/644/">https://wangye.org/blog/archives/644/</a></li>
</ul>
</blockquote>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Wrold!]]></title>
        <id>https://blog.icecome.com/hello-wrold/</id>
        <link href="https://blog.icecome.com/hello-wrold/">
        </link>
        <updated>2020-05-24T10:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏思考了好久，才又写下这些。</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏思考了好久，才又写下这些。</p>
<!-- more -->
<p>✍️我本身其实不是一个喜欢静下心写东西的人。从小学开始，每次作文不是不写，就是随便写两句就词穷了。后来中学，布置的日记，也都是敷衍而又潦草的写几笔。至于为何开了博客，大概就是因为新奇吧。</p>
<p>最早是在 2018 年，刚刚接触到 <strong>WordPress</strong>，于是尝试着搭建了一个，但是一个是懒，一个是主机的价格舍不得，于是没写几篇文章就被我关闭了，实在是汗颜。</p>
<p>中间断断续续的也重开过几次，每次都是匆匆而开，匆匆而闭。主要还是归咎于，我懒吧！🤣</p>
<p>这次，情况比较特殊。本博客是基于 <strong>Github Page</strong> 搭建的。所以，目前不会因为我舍不得 <em>Money</em> 而中途暴毙？！</p>
<p>其实之前有在微信开过公众号，毕竟它和博客还是蛮像的（小声BB：我是这么认为的。），不过后来觉得它没有个人网站有 <strong>B</strong> 格啊！毕竟一个只能从微信里找到相应公众号去看，另一个是需要从浏览器里输入个人域名才能访问。</p>
<p>没错，我就是这么一个爱慕虚荣的人。😂</p>
<p>其实，写写东西应该还是有好处的吧。能静下心来，梳理一下自己的思绪；能分享一些技巧，给需要的朋友看。</p>
<p>不过，碍于我的文笔，可能我也不会写出什么有价值的来。所以，大概也就是自己玩玩而已。</p>
<p>其实能写这么多，已经让我头疼。已经体会到那些网文作者哭喊卡文的痛楚，而且，我这还是一篇简简单单的前言。所以，就暂时到这儿吧。</p>
<p>那么，诸君，努力吧！</p>
<p>谨以此歌，献给自己，献给你们。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=340 height=86 src="//music.163.com/outchain/player?type=2&id=411214279&auto=1&height=66"></iframe>]]></content>
    </entry>
</feed>